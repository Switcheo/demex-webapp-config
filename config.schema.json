{
  "title": "Demex Webapp Config",
  "description": "demex-webapp-config is a repository to allow frontends to fetch metadata associated with Demex",
  "type": "object",
  "required": [
    "network",
    "prelaunch_markets",
    "blacklisted_markets",
    "blacklisted_pools",
    "blacklisted_tokens",
    "token_name_override_map",
    "transfer_options",
    "network_fees",
    "cross_selling_source_tokens",
    "external_chain_channels",
    "additional_ibc_token_config"
  ],
  "properties": {
    "network": {
      "type": "string",
      "enum": [
        "mainnet",
        "testnet",
        "devnet"
      ]
    },
    "prelaunch_markets": {
      "type": "array",
      "description": "List of market names designated as Pre-Launch markets",
      "items": {
        "$ref": "#/$defs/prelaunch_market"
      }
    },
    "blacklisted_markets": {
      "type": "array",
      "description": "List of blacklisted market names",
      "items": {
        "$ref": "#/$defs/blacklisted_market"
      }
    },
    "blacklisted_pools": {
      "type": "array",
      "description": "List of blacklisted pool ids",
      "items": {
        "$ref": "#/$defs/blacklisted_pool"
      }
    },
    "blacklisted_tokens": {
      "type": "array",
      "description": "List of blacklisted token denoms",
      "items": {
        "$ref": "#/$defs/blacklisted_token"
      }
    },
    "transfer_options": {
      "type": "object",
      "description": "List of blockchain networks and their priority numbers, used to set their order in deposit and withdrawal forms transfer option dropdown",
      "patternProperties": {
        ".*": {
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "network_fees": {
      "type": "object",
      "description": "List of token denoms and their priority numbers, used to set their order in network fee preferences",
      "patternProperties": {
        ".*": {
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "maintenance": {
      "type": "object",
      "description": "Dictates whether or not the maintenance page is displayed on each particular network.",
      "properties": {
        "title": {
          "type": "string",
          "description": "Title shown on maintenance page (optional). If not provided, the title of the page will default to \"Service Maintenance\""
        },
        "message": {
          "type": "string",
          "description": "Description shown on maintenance page (optional). If not provided, the description of the page will default to \"Website is temporily unavailable due to planned maintenance. We will be back soon.\""
        }
      }
    },
    "demex_points_config": {
      "type": "object",
      "description": "Config for demex points",
      "properties": {
        "depositsPerSpin": {
          "type": "integer"
        },
        "tradingVolumePerSpin": {
          "type": "integer"
        }
      }
    },
    "perp_pool_promo": {
      "type": "object",
      "description": "Perp Pool Promo config",
      "patternProperties": {
        "^\\d+$": {
          "type": "object",
          "required": [
            "start",
            "end",
            "perpPoolDepositBoost",
            "perpTradingBoost"
          ],
          "properties": {
            "start": {
              "$ref": "#/$defs/start"
            },
            "end": {
              "$ref": "#/$defs/end"
            },
            "perpPoolDepositBoost": {
              "$ref": "#/$defs/perpPoolDepositBoost"
            },
            "perpTradingBoost": {
              "$ref": "#/$defs/perpTradingBoost"
            }
          }
        }
      }
    },
    "cross_selling_source_tokens": {
      "type": "array",
      "description": "List of cross selling source token denoms",
      "items": {
        "$ref": "#/$defs/cross_selling_source_token"
      }
    }
  },
  "typeform_widget_config": {
    "type": "array",
    "description": "Ongoing survey configs for typeform survey widget",
    "items": {
      "type": "object",
      "required": [
        "surveyLink",
        "endTime",
        "pages"
      ],
      "properties": {
        "message": {
          "type": "string"
        },
        "surveyLink": {
          "type": "string"
        },
        "endTime": {
          "$ref": "#/$defs/survey_end"
        },
        "pages": {
          "type": "array"
        }
      }
    }
  },
  "external_chain_channels": {
    "type": "object",
    "description": "Map of destination channels for external IBC chains",
    "patternProperties": {
      "^[0-9A-Za-z ]+$": {
        "type": "object",
        "patternProperties": {
          "^[0-9A-Za-z ]+$": {
            "type": "string",
            "pattern": "^channel-([0-9]+)$"
          }
        }
      }
    },
    "additionalProperties": false
  },
  "additional_ibc_token_config": {
    "type": "array",
    "description": "List of information for tokens that (1) are not added on Carbon blockchain or (2) require packet forwarding",
    "items": {
      "$ref": "#/$defs/additional_ibc_token_info"
    }
  },
  "demex_trading_league_config": {
    "type": "object",
    "description": "Config for Demex Trading League",
    "properties": {
      "type": "object",
      "promoMarkets": {
        "type": "array",
        "description": "List of market names designated as promo markets during the Demex Trading League competition",
        "items": {
          "$ref": "#/$defs/promo_market"
        }
      },
      "currentPrizeSymbol": {
        "type": "string",
        "description": "The symbol of the prize token, mainly used to display the prize symbol and token icon on the Demex Trading League page."
      },
      "currentCompPerpPoolId": {
        "type": "integer",
        "description": "Id of the perp pool that provides liquidity for the promo markets of the Demex Trading League event."
      }
    }
  },
  "perp_pools": {
    "type": "object",
    "description": "Perp pool configs",
    "items": {
      "incentives": {
        "$ref": "#/$defs/perp_pools_incentives_info"
      },
      "banners": {
        "$ref": "#/$defs/perp_pool_banners_info"
      }
    }
  },
  "wswth_contract": {
    "type": "string",
    "description": "ERC-20 contract for wrapped SWTH"
  },
  "market_banners": {
    "type": "array",
    "description": "List of banner information to be displayed over the TradingView chart for the required market",
    "items": {
      "type": "object",
      "required": [
        "market_id",
        "content"
      ],
      "properties": {
        "market_id": {
          "$ref": "#/$defs/market_id"
        },
        "show_from": {
          "$ref": "#/$defs/show_from"
        },
        "show_until": {
          "$ref": "#/$defs/show_until"
        },
        "content": {
          "$ref": "#/$defs/content"
        },
        "hideable": {
          "$ref": "#/$defs/hideable"
        }
      }
    }
  },
  "native_depositor_contracts_map": {
    "type": "object",
    "description": "Map of axelar connection ids to their respective native depositor contract addresses",
    "patternProperties": {
      ".*": {
        "type": "string"
      }
    }
  },
  "native_token_contracts_map": {
    "type": "object",
    "description": "Map of token denoms to their respective contract addresses on the native chain",
    "patternProperties": {
      ".*": {
        "type": "string"
      }
    }
  },
  "market_promo": {
    "type": "object",
    "description": "Market Promo config",
    "patternProperties": {
      "^\\d+$": {
        "type": "object",
        "required": [
          "start",
          "end"
        ],
        "properties": {
          "start": {
            "$ref": "#/$defs/start"
          },
          "end": {
            "$ref": "#/$defs/end"
          },
          "tooltip": {
            "$ref": "#/$defs/tooltip"
          }
        }
      }
    }
  },
  "$defs": {
    "prelaunch_market": {
      "type": "string",
      "description": "Market name of Pre-launch market"
    },
    "promo_market": {
      "type": "string",
      "description": "Market name of Promo market"
    },
    "blacklisted_market": {
      "type": "string",
      "description": "Blacklisted market name"
    },
    "blacklisted_pool": {
      "type": "string",
      "description": "Blacklisted pool id (type: string)",
      "pattern": "^\\d+$"
    },
    "blacklisted_token": {
      "type": "string",
      "description": "Blacklisted token denom"
    },
    "perp_pool_id": {
      "type": "string",
      "description": "Perp pool id (type: string)",
      "pattern": "^\\d+$"
    },
    "show_from": {
      "type": "string",
      "description": "The date and time when the perp pool banner is scheduled to begin displaying (optional). If not provided, the banner will be shown immediately.",
      "pattern": "^\\d{4}(-\\d\\d(-\\d\\d(T\\d\\d:\\d\\d(:\\d\\d)?(\\.\\d+)?(([+-]\\d\\d:\\d\\d)|Z)?)?)?)?$"
    },
    "show_until": {
      "type": "string",
      "description": "The date and time when the perp pool banner is scheduled to stop displaying (optional). If not provided, the banner will continue to display indefinitely.",
      "pattern": "^\\d{4}(-\\d\\d(-\\d\\d(T\\d\\d:\\d\\d(:\\d\\d)?(\\.\\d+)?(([+-]\\d\\d:\\d\\d)|Z)?)?)?)?$"
    },
    "title": {
      "type": "string",
      "description": "The title shown on the banner"
    },
    "removed_markets": {
      "type": "string",
      "description": "The message shown on the banner describing markets being removed"
    },
    "action_trigger_date": {
      "type": "string",
      "description": "The date and time when the action in the banner message is triggered. The past_tense_text will not be shown if this value is omitted",
      "pattern": "^\\d{4}(-\\d\\d(-\\d\\d(T\\d\\d:\\d\\d(:\\d\\d)?(\\.\\d+)?(([+-]\\d\\d:\\d\\d)|Z)?)?)?)?$"
    },
    "past_tense_text": {
      "type": "string",
      "description": "The alternative message shown after the date of markets being added or removed has passed"
    },
    "added_markets": {
      "type": "string",
      "description": "The message shown on the banner describing markets being added"
    },
    "subtext": {
      "type": "string",
      "description": "The subtext shown on the banner"
    },
    "start": {
      "type": "string",
      "description": "The start time of the relevant program (in timestamp format)",
      "pattern": "^\\d{4}(-\\d\\d(-\\d\\d(T\\d\\d:\\d\\d(:\\d\\d)?(\\.\\d+)?(([+-]\\d\\d:\\d\\d)|Z)?)?)?)?$"
    },
    "end": {
      "type": "string",
      "description": "The end time of the relevant program (in timestamp format)",
      "pattern": "^\\d{4}(-\\d\\d(-\\d\\d(T\\d\\d:\\d\\d(:\\d\\d)?(\\.\\d+)?(([+-]\\d\\d:\\d\\d)|Z)?)?)?)?$"
    },
    "perpPoolDepositBoost": {
      "type": "integer",
      "description": "The spin boost multiplier for deposits in perp pool"
    },
    "perpTradingBoost": {
      "type": "integer",
      "description": "The spin boost multiplier for boosted perp markets trading volume"
    },
    "cross_selling_source_token": {
      "type": "string",
      "description": "Cross selling source token denom"
    },
    "survey_end": {
      "type": "string",
      "description": "The end time of the tyepform survey",
      "pattern": "^\\d{4}(-\\d\\d(-\\d\\d(T\\d\\d:\\d\\d(:\\d\\d)?(\\.\\d+)?(([+-]\\d\\d:\\d\\d)|Z)?)?)?)?$"
    },
    "market_id": {
      "type": "string",
      "description": "Market id (type: string)"
    },
    "hideable": {
      "type": "boolean",
      "description": "Whether the banner can be hidden by the user"
    },
    "content": {
      "type": "string",
      "description": "The content shown on the banner, we can render hyperlink in the content eg: You can visit [here](url)"
    },
    "tooltip": {
      "type": "string",
      "description": "The tooltip shown on the market select dropdown tag"
    },
    "additional_ibc_token_info": {
      "type": "object",
      "description": "Information for token that (1) is not added on Carbon blockchain or (2) requires packet forwarding.",
      "required": [
        "baseDenom",
        "chainRoutes"
      ],
      "properties": {
        "baseDenom": {
          "type": "string",
          "description": "Denom of token on its native chain",
          "minLength": 2
        },
        "chainRoutes": {
          "type": "array",
          "description": "List of IBC chains that token needs to be forwarded through before being deposited into Carbon",
          "items": {
            "type": "string"
          },
          "minItems": 1
        },
        "denomOnCarbon": {
          "type": "string",
          "description": "Denom of token on Carbon chain (omit if token is not added to Carbon chain)",
          "minLength": 2
        }
      }
    },
    "perp_pools_incentives_info": {
      "distributors": {
        "type": "array",
        "description": "List of ERC-20 distributor contracts for Perp Pool Incentives",
        "items": {
          "type": "string"
        }
      },
      "proxy": {
        "type": "string",
        "description": "ERC-20 contract claim and unwrap from incentives distributor for wrapped SWTH"
      }
    },
    "perp_pool_banners_info": {
      "type": "array",
      "description": "List of perp pool banners",
      "items": {
        "type": "object",
        "required": [
          "perp_pool_id",
          "title"
        ],
        "properties": {
          "perp_pool_id": {
            "$ref": "#/$defs/perp_pool_id"
          },
          "show_from": {
            "$ref": "#/$defs/show_from"
          },
          "show_until": {
            "$ref": "#/$defs/show_until"
          },
          "title": {
            "$ref": "#/$defs/title"
          },
          "removed_markets": {
            "$ref": "#/$defs/removed_markets"
          },
          "added_markets": {
            "$ref": "#/$defs/added_markets"
          },
          "past_tense_text": {
            "$ref": "#/$defs/past_tense_text"
          },
          "subtext": {
            "$ref": "#/$defs/subtext"
          }
        }
      }
    },
    "demex_referrer": {
      "type": "object",
      "description": "Default referrer for orders created through Demex",
      "patternProperties": {
        "address": {
          "type": "string"
        },
        "commission": {
          "type": "integer"
        },
        "kickback": {
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "spot_pool_config": {
      "type": "object",
      "description": "Config parameters for Spot Pools page",
      "properties": {
        "show_apr_tooltip": {
          "type": "boolean",
          "description": "Indicates whether or not to show APR tooltip on Spot Pools page"
        }
      }
    },
    "announcement_banner": {
      "type": "object",
      "description": "Custom announcement banner through all or only on specificed paths",
      "required": [
        "content",
        "show_only_on"
      ],
      "patternProperties": {
        "show_from": {
          "$ref": "#/$defs/show_from"
        },
        "show_until": {
          "$ref": "#/$defs/show_until"
        },
        "content": {
          "$ref": "#/$defs/content"
        },
        "hideable": {
          "$ref": "#/$defs/hideable"
        },
        "show_only_on": {
          "type": "array",
          "description": "List of paths that announcement will be show on. Empty array will be shown on all paths",
          "items": {
            "type": "string"
          },
          "minItems": 0
        }
      }
    },
    "quick_select_token": {
      "type": "object",
      "description": "Token denom for quick select in transfer form",
      "required": ["label_denom", "target_denom"],
      "properties": {
        "label_denom": {
          "type": "string",
          "description": "Token denom to show on UI"
        },
        "target_denom": {
          "type": "string",
          "description": "Token denom to use in transfer"
        }
      }
    },
    "quick_select_tokens": {
      "type": "array",
      "description": "List of tokens for quick select in transfer form",
      "items": {
        "$ref": "#/$defs/quick_select_token"
      }
    },
    "disabled_transfer_banner_config": {
      "type": "object",
      "description": "Config parameters for displaying banner to inform users that transfers for the relevant tokens are disabled",
      "properties": {
        "unsupported_tokens": {
          "type": "array",
          "description": "List of tokens are no longer supported",
          "items": {
            "type": "string"
          }
        },
        "temp_disabled_transfer_tokens": {
          "type": "object",
          "description": "List of tokens for which deposits and withdrawals have been temporarily disabled",
          "patternProperties": {
            ".*": {
              "type": "object",
              "properties": {
                "start": {
                  "$ref": "#/$defs/start"
                },
                "end": {
                  "$ref": "#/$defs/end"
                }
              }
            }
          }
        },
        "temp_disabled_bridges": {
          "type": "object",
          "description": "List of bridges for which deposits and withdrawals have been temporarily disabled",
          "patternProperties": {
            ".*": {
              "type": "object",
              "properties": {
                "start": {
                  "$ref": "#/$defs/start"
                },
                "end": {
                  "$ref": "#/$defs/end"
                }
              }
            }
          }
        }
      }
    }
  }
}